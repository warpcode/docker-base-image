#!/usr/bin/with-contenv bash
# vim: set ft=sh :

export SUPPRESS_BASE_VAR_DUMPENV=1
source '/etc/cont-init.d/00-base-variables.sh'

CURRENT_USER_ID=$(id -u)
FROM_ENV=0
APP_EXEC=()
USER_ID=""
GROUP_ID=""
GROUP_ID_LIST=""
RUN_AS_ROOT=0
HOME_DIR_ROOT=""
HOME_DIR_USER=""

while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        -e|--from-env)
            FROM_ENV=1
            # Set vars from environment vars
            USER_ID="$PUID"
            GROUP_ID="$PGID"
            GROUP_ID_LIST="$PGID_LIST"
            RUN_AS_ROOT="${CMD_AS_ROOT:-0}"
            HOME_DIR_ROOT="$HOME_ROOT"
            HOME_DIR_USER="$HOME_USER"
            shift # past argument
            ;;
        -r|--run-as-root)
            RUN_AS_ROOT=1
            shift # past argument
            ;;
        -u|--uid)
            USER_ID="$2"
            shift # past argument
            shift # past value
            ;;
        -g|--gid)
            GROUP_ID="$2"
            shift # past argument
            shift # past value
            ;;
        -l|--gid-list)
            GROUP_ID_LIST="$2"
            shift # past argument
            shift # past value
            ;;
        -h|--home)
            HOME_DIR_ROOT="$2"
            HOME_DIR_USER="$2"
            shift # past argument
            shift # past value
            ;;
        --)
            shift # remove "--"
            APP_EXEC="$@"
            break # once we hit --, we determine this as being the end of our args
            ;;
        *) # unknown option
            APP_EXEC+=("$1") # save it in an array for later
            shift
            ;;
    esac
done

if [ -z "$APP_EXEC" ]; then
    echo "No command specified"
    exit 127
fi

SET_UID_GID=""
# Only root can descalate privelage
# and only descalate if we're not forcing root
# if a user specifies the new USER_ID feature of docker, we also don't want to descalate
if [ "$CURRENT_USER_ID" -eq "0" ] && [ "$RUN_AS_ROOT" -eq "0" ]; then

    if [ -z "$USER_ID" ]; then
        echo "uid has not been set"
        exit 1;
    fi

    if [ -z "$GROUP_ID" ]; then
        echo "gid has not been set"
        exit 1;
    fi

    if [ "$USER_ID" -eq "0" ]; then
        echo "uid cannot be 0"
        exit 1;
    fi

    if [ -n "${GROUP_ID_LIST:-}" ]; then
        SET_UID_GID="s6-applyuidgid -u $USER_ID -g $GROUP_ID -G $GROUP_ID_LIST"
    else
        SET_UID_GID="s6-setuidgid $USER_ID:$GROUP_ID"
    fi

    if [ -n "$HOME_DIR_USER" ]; then
        export HOME="$HOME_DIR_USER"
    fi
else
    if [ -n "$HOME_DIR_ROOT" ]; then
        export HOME="$HOME_DIR_ROOT"
    fi
fi


exec 2>&1 $SET_UID_GID $APP_EXEC
