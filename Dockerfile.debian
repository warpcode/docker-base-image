ARG BASE_IMAGE=
ARG BASE_TAG=

# Build su-exec
FROM ${BASE_IMAGE}:${BASE_TAG} as builder

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        libc-dev \
        curl \
    && curl -k -fLo /tmp/su-exec.c https://raw.githubusercontent.com/ncopa/su-exec/master/su-exec.c \
    && rm -rf /var/lib/apt/lists/* \
    && gcc -Wall /tmp/su-exec.c -o /usr/bin/su-exec \
    && chown root:root /usr/bin/su-exec \
    && chmod 700 /usr/bin/su-exec \
    && rm /tmp/su-exec.c \
    && apt purge -y \
        gcc \
        libc-dev \
        curl \
    && apt-get autoremove -y

# Build the main image
FROM ${BASE_IMAGE}:${BASE_TAG}

ENV DEBIAN_FRONTEND=noninteractive \
    TZ=Europe/London \
    PUID=911 \
    PGID=911

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        curl \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# Add non-root user
RUN groupadd docker -g "$PGID" \
    && useradd -u "$PUID" -g docker docker \
    && mkdir -p /home/docker \
    && chown -R docker:docker /home/docker

# Work out architecture and then install s6 overlay
RUN OVERLAY_ARCH=$(arch | sed 's/x86_64/amd64/g' | sed 's/armv7l/armhf/g') \
    && curl -kfLo /tmp/s6-overlay.tar.gz -L \
	"https://github.com/just-containers/s6-overlay/releases/download/v2.0.0.1/s6-overlay-${OVERLAY_ARCH}.tar.gz" \
    && tar xfz /tmp/s6-overlay.tar.gz -C / \
    && rm /tmp/s6-overlay.tar.gz

COPY ./rootfs/ /

COPY --from=builder /usr/bin/su-exec /usr/bin/su-exec

ENTRYPOINT ["/init"]
